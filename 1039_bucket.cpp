#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<deque> 
using namespace std;


vector<int> list[500000];		 
//桶的大小不是26*26*26*10，这是三字母一数字有序组合的多样性。但这不是三字母一数字转化成数字的最大范围。
//他的范围是((25*26+25)*26+25)*26+9，即ZZZ9的值。最大的值是桶的范围。
//因为例如A1和B1分别代表1和27，但两者之差仅为9。而10-26的这些数字三字母一数字的组合是无法表示的。
//这是桶范围和桶多样性之前区别的缘由，这种差异的产生来自于不同进制间的变换。
//进一步延伸，大进制+小进制的两位组合，会使有些数字无法表示。如A1和B1，没有组合可以表示10.
//而大进制+小进制的两位组合，会使有些数字被重复表示。如1A和0k都表示10.这时可以将字符串逆序的加起来(如果是乱序，就从大到小加)，保证组合对应的字母唯一，从而使用桶。 
int getindex(char s[5])
{
	return (((s[0]-'A')*26+s[1]-'A')*26+s[2]-'A')*26+s[3]-'0';	
} 
int m,n,index,cnt;
int i,j;
char tmpname[5];
bool is_found;

int main(void)
{
	cin>>n>>m;
	while(m--)
	{
		cin>>index>>cnt;
		for(i=0;i<cnt;i++)
		{
			scanf("%s",tmpname);
			//改用了桶依然超时，因为这里之前是用的cin。四万的规模，cout和scanf其实没差。但是每个学生的姓名不止出现一次。四千*4万，上亿的规模cout就吃不消了。 
			j=getindex(tmpname);
			list[j].push_back(index);
		}
	}
	while(n--)
	{
		cin>>tmpname;
		i=getindex(tmpname);
		sort(list[i].begin(),list[i].end()); 
		cout<<tmpname<<" "<<list[i].size();
		for(j=0;j<list[i].size();j++)
		{
			cout<<" "<<list[i][j];
		}
		cout<<endl;
	}
	return 0;
}

//其实它提示很明显了，这些学生的名字这么标准，就该用桶排序的思路。不然scanf的三重循环会超时。 
////改用了桶依然可能超时，因为这里可能有大规模的I/O。四万的规模，cin和scanf其实没差。但是每个学生的姓名不止出现一次。四千*4万，上亿的规模cout就吃不消了。 
//桶的大小不是26*26*26*10，这是三字母一数字有序组合的多样性。但这不是三字母一数字转化成数字的最大范围。
//他的范围是((25*26+25)*26+25)*26+9，即ZZZ9的值。最大的值是桶的范围。
//因为例如A1和B1分别代表1和27，但两者之差仅为9。而10-26的这些数字三字母一数字的组合是无法表示的。
//这是桶范围和桶多样性之前区别的缘由，这种差异的产生来自于不同进制间的变换。
//进一步延伸，大进制+小进制的两位组合会使有些数字无法表示。如A1和B1，没有组合可以表示10.
//而大进制+小进制的两位组合会使有些数字被重复表示。如1A和0k都表示10.这时可将字符串逆序相加(如果是乱序，就从大到小加)，保证组合对应的字母唯一，从而使用桶。
//针对上述情况，其实也不用逆序或者多用空间，就不用算组合多大，开一个四维数组就行了。list[26][26][26][10],使用的时候list[s[0]-'A'][s[1]-'A'][s[2]-'A'][s[3]-'0] 
//用桶的话尽量使用vector，因为deque比vector要实用大得多的内存。可能用桶后，不运行超时了，但全都内存超限了，那就是0分。
//其实sizeof()vector和deque后，分别是24和80.而500000的vector(int)是12000kb，讲道理deque应该是50000kb，还在65000kb的要求之内，但就是超了。
//又测试了下，50000大小的deque<int>在oj上是33000kb的大小，所以deque<int>连100000都申请不了。用vector<int>的四维数组申请，只需要4000kb。


//桶的总结：
//标准name或id使用桶，桶空间的申请用vector而非deque，用多维数组而非一维，用scanf和printf而非cout和cin。
//一百万vector<int>的内存是24000kb，deque<int>占用内存将近是vector的30倍。 
 
